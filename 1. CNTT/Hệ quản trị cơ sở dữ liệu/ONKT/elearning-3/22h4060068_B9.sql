CREATE DATABASE QuanLySanPhamTiepThi;
GO

USE QuanLySanPhamTiepThi;
GO

CREATE TABLE NHANVIEN (
    MANV VARCHAR(10) PRIMARY KEY,
    TENNV NVARCHAR(50)
);

CREATE TABLE SANPHAM (
    TENSP VARCHAR(20) PRIMARY KEY,
    DVT NVARCHAR(10),
    DONGIA DECIMAL(18, 2)
);

CREATE TABLE TIEPTHI (
    MANV VARCHAR(10),
    TENSP VARCHAR(20),
    PRIMARY KEY (MANV, TENSP),
    FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
    FOREIGN KEY (TENSP) REFERENCES SANPHAM(TENSP)
);

CREATE TABLE HOADON (
    SOHD VARCHAR(10) PRIMARY KEY,
    MANV VARCHAR(10),
    NGAY DATE,
    KHUVUC VARCHAR(10),
    FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV)
);

CREATE TABLE CTHD (
    SOHD VARCHAR(10),
    MANV VARCHAR(10),
    TENSP VARCHAR(20),
    SOLUONG INT,
    PRIMARY KEY (SOHD, MANV, TENSP),
    FOREIGN KEY (SOHD) REFERENCES HOADON(SOHD),
    FOREIGN KEY (MANV) REFERENCES NHANVIEN(MANV),
    FOREIGN KEY (TENSP) REFERENCES SANPHAM(TENSP)
);

-- Bảng NHANVIEN
INSERT INTO NHANVIEN (MANV, TENNV) VALUES
('NV001', N'Nguyễn Văn A'),
('NV002', N'Trần Thị B'),
('NV003', N'Lê Hoàng C');

-- Bảng SANPHAM
INSERT INTO SANPHAM (TENSP, DVT, DONGIA) VALUES
('SP001', N'Chiếc', 100000),
('SP002', N'Bộ', 500000),
('SP003', N'Hộp', 250000);

-- Bảng TIEPTHI
INSERT INTO TIEPTHI (MANV, TENSP) VALUES
('NV001', 'SP001'),
('NV001', 'SP002'),
('NV002', 'SP002'),
('NV002', 'SP003'),
('NV003', 'SP001');

-- Bảng HOADON
INSERT INTO HOADON (SOHD, MANV, NGAY, KHUVUC) VALUES
('HD001', 'NV001', '2023-11-01', 'Q1'),
('HD002', 'NV002', '2023-11-01', 'Q3'),
('HD003', 'NV001', '2023-11-02', 'Q10');

-- Bảng CTHD
INSERT INTO CTHD (SOHD, MANV, TENSP, SOLUONG) VALUES
('HD001', 'NV001', 'SP001', 2),
('HD001', 'NV001', 'SP002', 1),
('HD002', 'NV002', 'SP002', 3),
('HD003', 'NV001', 'SP001', 1);

SELECT * FROM NHANVIEN;
SELECT * FROM SANPHAM;
SELECT * FROM TIEPTHI;
SELECT * FROM HOADON;
SELECT * FROM CTHD;

-- 1.1
SELECT NV.TENNV
FROM NHANVIEN NV
WHERE NOT EXISTS (
    -- Tìm các sản phẩm mà NV được giao tiếp thị...
    SELECT TT.TENSP
    FROM TIEPTHI TT
    WHERE TT.MANV = NV.MANV
    AND NOT EXISTS (
        -- ...nhưng lại không có trong hóa đơn của NV
        SELECT 1
        FROM HOADON HD
        JOIN CTHD C ON HD.SOHD = C.SOHD
        WHERE HD.MANV = NV.MANV
        AND C.TENSP = TT.TENSP
    )
);

-- 1.2
WITH RankedSales AS (
    SELECT
        NV.TENNV,
        C.TENSP,
        SUM(C.SOLUONG) AS TongSoLuong,
        ROW_NUMBER() OVER (PARTITION BY NV.MANV ORDER BY SUM(C.SOLUONG) DESC) AS RN
    FROM NHANVIEN NV
    JOIN HOADON HD ON NV.MANV = HD.MANV
    JOIN CTHD C ON HD.SOHD = C.SOHD
    GROUP BY NV.MANV, C.TENSP
)
SELECT TENNV, TENSP, TongSoLuong
FROM RankedSales
WHERE RN = 1;

-- 1.3
SELECT NV.TENNV, SP.TENSP
FROM TIEPTHI TT
JOIN NHANVIEN NV ON TT.MANV = NV.MANV
JOIN SANPHAM SP ON TT.TENSP = SP.TENSP
LEFT JOIN HOADON HD ON TT.MANV = HD.MANV
LEFT JOIN CTHD C ON HD.SOHD = HD.SOHD AND C.TENSP = SP.TENSP
WHERE C.TENSP IS NULL;

-- 2.1
CREATE PROCEDURE Sp_Min
AS
BEGIN
    SELECT TENSP
    FROM SANPHAM
    WHERE DONGIA = (SELECT MIN(DONGIA) FROM SANPHAM);
END;
GO  -- Thêm GO để phân tách các batch (nếu cần)

-- 2.2
CREATE PROCEDURE TienTheoNgay (@Ngay DATE, @TongTien DECIMAL(18, 2) OUTPUT)
AS
BEGIN
    SELECT @TongTien = ISNULL(SUM(C.SOLUONG * SP.DONGIA), 0)  -- Xử lý trường hợp không có hóa đơn
    FROM HOADON HD
    JOIN CTHD C ON HD.SOHD = C.SOHD
    JOIN SANPHAM SP ON C.TENSP = SP.TENSP
    WHERE HD.NGAY = @Ngay;
END;
GO

-- Cách gọi thủ tục và lấy giá trị OUTPUT:
DECLARE @TotalAmount DECIMAL(18,2);
EXEC TienTheoNgay @Ngay = '2023-11-01', @TongTien = @TotalAmount OUTPUT;
SELECT @TotalAmount AS TotalSales;

-- 2.3
CREATE PROCEDURE Spham_of_Nvien (@MaNV VARCHAR(10))
AS
BEGIN
    SELECT SP.TENSP
    FROM TIEPTHI TT
    JOIN SANPHAM SP ON TT.TENSP = SP.TENSP
    WHERE TT.MANV = @MaNV;
END;
GO

-- Cách gọi thủ tục:
EXEC Spham_of_Nvien @MaNV = 'NV001';

-- 3.1
CREATE TRIGGER TR_MaxProducts ON TIEPTHI
AFTER INSERT
AS
BEGIN
    IF ((SELECT COUNT(*) FROM TIEPTHI WHERE MANV = (SELECT MANV FROM inserted)) > 5)
    BEGIN
        RAISERROR('Mỗi nhân viên chỉ được tiếp thị tối đa 5 sản phẩm.', 16, 1)
        ROLLBACK TRANSACTION;
        RETURN;  -- Thêm RETURN để ngăn các trigger khác chạy (nếu có)
    END
END;
GO

-- 3.2
CREATE TRIGGER TR_ValidKhuVuc ON HOADON
BEFORE INSERT, UPDATE  -- Sử dụng BEFORE để kiểm tra trước khi chèn/cập nhật
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted WHERE KHUVUC NOT IN ('Q1', 'Q3', 'Q10'))
    BEGIN
        RAISERROR('Khu vực không hợp lệ.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END;
GO

-- 3.3
CREATE TRIGGER TR_ValidTENSP_TiepThi ON TIEPTHI
AFTER INSERT, UPDATE
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted WHERE TENSP NOT IN (SELECT TENSP FROM SANPHAM))
    BEGIN
        RAISERROR('TENSP không tồn tại trong bảng SANPHAM.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END;
GO

-- 3.4
CREATE TRIGGER TR_PositiveDONGIA ON SANPHAM
BEFORE INSERT, UPDATE  -- Sử dụng BEFORE
AS
BEGIN
    IF EXISTS (SELECT 1 FROM inserted WHERE DONGIA <= 0)
    BEGIN
        RAISERROR('DONGIA phải là số dương.', 16, 1);
        ROLLBACK TRANSACTION;
        RETURN;
    END
END;
GO